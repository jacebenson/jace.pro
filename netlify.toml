# Settings in the [build] context are global and are applied to all contexts
# unless otherwise overridden by more specific contexts.
[build]
  # Directory to change to before starting a build.
  # This is where we will look for package.json/.nvmrc/etc.
  # If not set, defaults to the root directory.
  base = "/"

  # Directory that contains the deploy-ready HTML files and assets generated by
  # the build. This is relative to the base directory if one has been set, or the
  # root directory if a base has not been set. This sample publishes the
  # directory located at the absolute path "root/project/build-output"
  publish = "_site/"

  # Default build command.
  command = "npm run build"

  # Directory with the serverless functions, including background functions,
  # to deploy to AWS. This is relative to the base directory if one has been set, 
  # or the root directory if a base has not been set.
  functions = "functions/"

# Production context: all deploys from the Production branch set in your site's
# deploy contexts will inherit these settings.
[context.production]
  publish = "_site/"
  command = "npm run build"

# Deploy Preview context: all deploys generated from a pull/merge request will
# inherit these settings.
[context.deploy-preview]
  publish = "_site/"

# Here is another way to define context specific environment variables.
[context.deploy-preview.environment]
  ACCESS_TOKEN = "not so secret"


# Redirects and headers are GLOBAL for all builds â€“ they do not get scoped to
# contexts no matter where you define them in the file.
# For context-specific rules, use _headers or _redirects files, which are
# PER-DEPLOY.

# A redirect rule with many of the supported properties
[[redirects]]
  from = "/help"
  to = "/resources"